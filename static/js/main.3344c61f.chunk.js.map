{"version":3,"sources":["components/Header.js","components/RadioButton.js","components/Tagbox.js","components/InputList.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","href","Component","RadioButton","props","className","type","checked","isChecked","onChange","handleRadioChange","name","value","label","Checkbox","icon","Check","Add","handleCheckboxChange","Modal","setAppElement","Inputs","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","closeModal","setState","resultIsOpen","e","_this$state","state","distanceOptions","priceOptions","nextState","target","map","item","objectSpread","categoryOptions","handleSubmit","preventDefault","_this$state2","restaurants","distanceOption","filter","priceOption","filteredCategory","reduce","pre","cur","push","length","distance","Number","price","resultList","categoryFlag","category","some","includes","randomIndex","Math","floor","random","result","id","_this2","_this$state3","priceForm","src_components_RadioButton","assign","key","distanceForm","categoryForm","components_Tagbox","lib_default","isOpen","onRequestClose","contentLabel","overlayClassName","onClick","Close","InputList_ModalBody","ModalBody","_ref","App","Data","data","src_components_Header","components_InputList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3344c61f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Header.scss'\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <a href='/'>Momuk?</a>\n      </header>\n    )\n  }\n}\n\nexport default Header;","import React from 'react'\nimport './RadioButton.scss'\n\nexport const RadioButton = props => {\n  return (\n    <label className=\"radio\">\n      <input\n        className=\"hidden\"\n        type=\"radio\"\n        checked={props.isChecked}\n        onChange={props.handleRadioChange}\n        name={props.name}\n        value={props.value}\n      />\n      <span className=\"label\"></span>{props.label}\n    </label>\n  )\n}\n\nexport default RadioButton","import React from 'react';\nimport './Tagbox.scss'\nimport { Add, Check } from '@material-ui/icons';\n\nexport const Checkbox = props => {\n  let icon;\n\n  if (props.isChecked) {\n    icon = <Check />\n  } else {\n    icon = <Add />\n  }\n  return (\n    <label className=\"tagbox\">\n      <input\n        className=\"hidden\"\n        type=\"checkbox\"\n        checked={props.isChecked}\n        onChange={props.handleCheckboxChange}\n        name={props.name}\n        value={props.value}\n      />\n      <p className=\"label\">\n        <span>\n          {icon}\n        </span>\n        {props.label}\n      </p>\n    </label>\n  )\n}\n\nexport default Checkbox;","import React, { Component } from 'react'\nimport RadioButton from './RadioButton'\nimport Tagbox from './Tagbox'\nimport Modal from 'react-modal';\nimport { Close } from '@material-ui/icons';\n\nimport './InputList.scss'\n\nModal.setAppElement('#root')\n\nclass Inputs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: '',\n      resultList: [],\n      resultIsOpen: false,\n      distanceOptions: [\n        {\n          id: 0,\n          value: '0',\n          isChecked: false,\n          label: '아주 가까움',\n          name: 'distance',\n        },\n        {\n          id: 1,\n          value: '1',\n          isChecked: false,\n          label: '가까움',\n          name: 'distance',\n        },\n        {\n          id: 2,\n          value: '2',\n          isChecked: false,\n          label: '중간',\n          name: 'distance',\n        },\n        {\n          id: 3,\n          value: '3',\n          isChecked: false,\n          label: '멀다',\n          name: 'distance',\n        },\n        {\n          id: 4,\n          value: '4',\n          isChecked: false,\n          label: '완전 멀다',\n          name: 'distance',\n        },\n      ],\n      priceOptions: [\n        {\n          id: 0,\n          value: '0',\n          isChecked: false,\n          label: '7000원 이하',\n          name: 'price',\n        },\n        {\n          id: 1,\n          value: '1',\n          isChecked: false,\n          label: '7,000원-10,000원',\n          name: 'price',\n        },\n        {\n          id: 2,\n          value: '2',\n          isChecked: false,\n          label: '10,000원-15,000원',\n          name: 'price',\n        },\n        {\n          id: 3,\n          value: '3',\n          isChecked: false,\n          label: '15,000원 이상',\n          name: 'price',\n        },\n      ],\n      categoryOptions: [\n        {\n          id: 0,\n          value: 'korean',\n          isChecked: false,\n          label: '한식',\n          name: 'category',\n        },\n        {\n          id: 1,\n          value: 'chinese',\n          isChecked: false,\n          label: '중식',\n          name: 'category',\n        },\n        {\n          id: 2,\n          value: 'japanese',\n          isChecked: false,\n          label: '일식',\n          name: 'category',\n        },\n        {\n          id: 3,\n          value: 'world',\n          isChecked: false,\n          label: '세계음식',\n          name: 'category',\n        },\n        {\n          id: 4,\n          value: 'buffet',\n          isChecked: false,\n          label: '뷔페',\n          name: 'category',\n        },\n        {\n          id: 5,\n          value: 'soup',\n          isChecked: false,\n          label: '국물요리',\n          name: 'category',\n        },\n        {\n          id: 6,\n          value: 'noodle',\n          isChecked: false,\n          label: '면요리',\n          name: 'category',\n        },\n        {\n          id: 7,\n          value: 'bunsik',\n          isChecked: false,\n          label: '분식',\n          name: 'category',\n        },\n        {\n          id: 8,\n          value: 'anytizer',\n          isChecked: false,\n          label: '간편식',\n          name: 'category',\n        },\n      ]\n    }\n  }\n\n  closeModal = () => {\n    this.setState({\n      resultIsOpen: false,\n    });\n  }\n\n  handleRadioChange = e => {\n    const { distanceOptions, priceOptions } = this.state;\n    const selectedState = e.target.name === 'distance' ? distanceOptions : priceOptions;\n    const nextState = selectedState.map(item => {\n      if (item.value === e.target.value) {\n        return { ...item, isChecked: true }\n      } else {\n        return { ...item, isChecked: false }\n      }\n    })\n\n    if (e.target.name === 'distance') {\n      this.setState({\n        distanceOptions: nextState,\n      })\n    } else {\n      this.setState({\n        priceOptions: nextState,\n      })\n    }\n  }\n\n  handleCheckboxChange = e => {\n    const { categoryOptions } = this.state;\n    const nextState = categoryOptions.map(item => {\n      if (item.value === e.target.value) {\n        return { ...item, isChecked: !item.isChecked }\n      }\n      return item\n    });\n\n    this.setState({\n      categoryOptions: nextState,\n    })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const { distanceOptions, priceOptions, categoryOptions } = this.state\n    const { restaurants } = this.props\n\n\n    // 선택된 객체\n    const distanceOption = distanceOptions.filter(item => {\n      return item.isChecked\n    })\n\n    const priceOption = priceOptions.filter(item => {\n      return item.isChecked\n    })\n\n    const filteredCategory = categoryOptions.reduce((pre, cur) => {\n      if (cur.isChecked) {\n        pre.push(cur.value)\n      }\n      return pre\n    }, [])\n\n    // 전부 선택한 경우\n    if (distanceOption.length && priceOption.length && filteredCategory.length) {\n      // 선택된 form의 value\n      const distance = Number(distanceOption[0].value)\n      const price = Number(priceOption[0].value)\n\n\n      // 식당 리스트에서 선택한 값들만 필터링\n      const resultList = restaurants.filter(item => {\n        // 카테고리가 하나라도 겹치는 경우 true 리턴\n        const categoryFlag = item.category.some(e => filteredCategory.includes(e))\n        return item.price === price && item.distance === distance && categoryFlag\n      })\n\n      // 랜덤 출력을 위한 인덱스\n      const randomIndex = Math.floor(Math.random() * resultList.length)\n      const result = resultList.length > 0 ? resultList[randomIndex].name : '결과가 없습니다.'\n\n      this.setState({\n        result: result,\n        resultList: resultList,\n        resultIsOpen: true\n      })\n    }\n\n    // 전부 선택하지 않은 경우\n    if (!filteredCategory.length || !priceOption.length || !distanceOption.length) {\n      let result = ''\n      if (!filteredCategory.length) {\n        result = '종류를 선택해 주세요.'\n      }\n\n      if (!priceOption.length) {\n        result = '가격을 선택해 주세요.'\n      }\n\n      if (!distanceOption.length) {\n        result = '거리를 선택해 주세요.'\n      }\n\n      this.setState({\n        result: result,\n        resultList: [],\n        resultIsOpen: true\n      })\n    }\n  }\n\n  render() {\n    const { distanceOptions, priceOptions, categoryOptions, result, resultList, resultIsOpen } = this.state\n\n    const priceForm = priceOptions.map((price, id) => {\n      return (<RadioButton key={id} handleRadioChange={this.handleRadioChange} {...price} />)\n    })\n\n    const distanceForm = distanceOptions.map((distance, id) => {\n      return (<RadioButton key={id} handleRadioChange={this.handleRadioChange} {...distance} />)\n    })\n\n    const categoryForm = categoryOptions.map((category, id) => {\n      return (<Tagbox key={id} handleCheckboxChange={this.handleCheckboxChange} {...category} />)\n    })\n\n    return (\n      <form>\n        <div>\n          <Modal\n            isOpen={resultIsOpen}\n            onRequestClose={this.closeModal}\n            contentLabel=\"모먹 결과입니다.\"\n            className=\"center aligned modal\"\n            overlayClassName=\"overlay\"\n          >\n            <button className=\"modal-close\" onClick={this.closeModal}><Close /></button>\n            <div className=\"cetner aligned modal-body\">\n              <ModalBody result={result} resultList={resultList} />\n            </div>\n          </Modal>\n        </div>\n        <div className=\"distance form\">\n          <h3>거리를 선택해 주세요.</h3>\n          {distanceForm}\n        </div>\n        <div className=\"price form\">\n          <h3>가격을 선택해 주세요.</h3>\n          {priceForm}\n        </div>\n        <div className=\"category form\">\n          <h3>종류를 선택하세요.</h3>\n          <p className=\"large caption\">*중복 선택 가능</p>\n          {categoryForm}\n        </div>\n        <button onClick={this.handleSubmit} className=\"fluid button\">오늘 모먹?</button>\n      </form>\n    )\n  }\n}\n\nconst ModalBody = ({ result, resultList }) => {\n  if (resultList.length) {\n    return (\n      <div>\n        <h2>오늘의 모먹?</h2>\n        <p className=\"display\">{result}</p>\n        <p className=\"caption\">맛점하세용</p>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <p className=\"display\">{result}</p>\n      </div>\n    )\n  }\n}\n\nexport default Inputs","import React, { Component } from 'react'\n\nimport Header from './components/Header'\nimport Inputs from './components/InputList'\n\nimport './styles/main.scss';\nimport Data from './data.json'\n\n\nclass App extends Component {\n  state = {\n    restaurants: Data.data\n  }\n\n  render() {\n    const { restaurants } = this.state\n    return (\n      <div className=\"App\">\n        <Header />\n        <Inputs restaurants={restaurants} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}